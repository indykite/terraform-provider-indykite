---
name: Image build for jarvis-proto
on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - master
    paths:
      - docker/**
permissions:
  contents: read
  id-token: write
jobs:
  build:
    name: Build and publish Test image
    env:
      ARTIFACT_REGISTRY_URL: europe-west1-docker.pkg.dev
      GCP_PROJECT_ID_MGMT: ${{ secrets.GCP_PROJECT_ID_MGMT }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      IMAGE_NAME: terraform-tests-for-local-jarvis
    runs-on: ubuntu-latest
    steps:
      - name: actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0 - https://github.com/actions/checkout/releases

      - id: get_version
        run: |
          version=$(cat ./docker/local/ForJarvisProtoLocal.Dockerfile | sed -nr 's/.*version="(.+)"/\1/p')
          echo "version=${version}" >>"${GITHUB_OUTPUT}"

      - name: docker/setup-buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1 - https://github.com/docker/setup-buildx-action/releases
        id: buildx

      - name: gcloud/auth
        uses: google-github-actions/auth@c200f3691d83b41bf9bbd8638997a462592937ed # v2.1.13 - https://github.com/google-github-actions/auth/releases
        id: authentication
        with:
          workload_identity_provider: projects/581343830490/locations/global/workloadIdentityPools/github-mgmt/providers/github-mgmt-provider
          service_account: github@${{ env.GCP_PROJECT_ID_MGMT }}.iam.gserviceaccount.com

      - name: login to artifact registry
        run: |
          gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_URL }} -q

      - name: Build, Tag and Publish docker image
        run: |-
          cd docker/local
          docker buildx build --push --squash --build-arg SSH_PRIVATE_KEY="${{ env.SSH_KEY }}" \
          --tag ${{ env.ARTIFACT_REGISTRY_URL }}/${{ env.GCP_PROJECT_ID_MGMT }}/indykite/${{ env.IMAGE_NAME }}:latest \
          --tag ${{ env.ARTIFACT_REGISTRY_URL }}/${{ env.GCP_PROJECT_ID_MGMT }}/indykite/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }} \
          --platform linux/amd64,linux/arm64,linux/arm/v7 -f ForJarvisProtoLocal.Dockerfile .
