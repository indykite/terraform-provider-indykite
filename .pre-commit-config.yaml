---
# Copyright (c) 2022 IndyKite
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Usage & installation, the first configures the default stages only, the others must be installed explicitly:
#   pre-commit install
#   pre-commit install -t post-checkout -t commit-msg
#
# Prerequisites:
#   - if using 'make install-tools', then '~/go/bin' must be added to $PATH in ~/.bash_profile
# yamllint disable rule:line-length
#   brew install pre-commit yamlfmt yamllint actionlint markdownlint-cli2 shellcheck shfmt checkov trivy go gci golangci-lint hadolint terraform-docs tflint terragrunt
#
# Update hooks and their dependencies regularly via:
#   (remote) pre-commit autoupdate --jobs $(getconf _NPROCESSORS_ONLN)
#   (local) brew update && brew upgrade -g
# TODO: do NOT use '--freeze' until https://github.com/renovatebot/renovate/issues/22567 is completed
#
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_stages: [pre-commit, pre-push]
default_install_hook_types: [pre-commit]
fail_fast: true # false
minimum_pre_commit_version: 4.0.0

#
repos:
  - repo: meta
    hooks:
      # - id: check-hooks-apply
      - id: check-useless-excludes
        name: pre-commit/check-useless-excludes

  - repo: ssh://git@github.com/indykite/ops-common
    rev: "93f7e5f4c05a1b86d36993cd0b2a47fd5cfba54b" # using a branch name (or HEAD) is not supported
    hooks:
      # POST-CHECKOUT
      # install explicitly with: pre-commit install -t post-checkout
      - id: git-pull
      - id: git-branch-delete-stale

      # pre-commit validations
      # - id: pre-commit-autoupdate # done via 'renovate'; left for reference and possible options
      #   args: [--freeze] # store hashes in 'rev' instead of tag names
      - id: pre-commit-validate-config
      - id: pre-commit-validate-manifest

      # SAST
      - id: trivy

      # Shellcheck
      - id: shfmt
      - id: shellcheck

  #
  # Renovate
  - repo: https://github.com/renovatebot/pre-commit-hooks # ci:ignore:OK to validate locally only, otherwise it adds 850MB+ to unpacked cache
    rev: "41.111.0"
    hooks:
      - id: renovate-config-validator
        args: [--strict]

  #
  # Commit Message linting
  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook # ci:ignore:executed under a separate GitHub action
    rev: v9.22.0
    hooks:
      # NON-DEFAULT stage, install explicitly with: pre-commit install -t commit-msg
      - id: commitlint
        stages: [commit-msg]
        args: ["--strict"] # 'strict' equals to 'failOnWarnings' in Github Action setting
        additional_dependencies:
          - "@commitlint/config-conventional"
          - commitlint-plugin-function-rules

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Git style
      - id: check-added-large-files
        args: [--maxkb=1500]
      - id: check-merge-conflict
      - id: check-vcs-permalinks
      - id: forbid-new-submodules
      # - id: forbid-submodules # XXX: either of two is enough
      - id: no-commit-to-branch
        name: no-commit-to-master
        args: [--branch, dev, --branch, develop, --branch, master, --branch, main]

      # Common errors
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: destroyed-symlinks

      # Cross platform
      - id: check-illegal-windows-names
      - id: check-case-conflict
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]

      # Format linters
      # 'check-yaml' and 'sort-simple-yaml' disabled intentionally, use hooks below
      - id: check-xml
      - id: check-toml
      - id: check-json
      - id: pretty-format-json
        args: [--no-sort-keys, --autofix]

      # Security
      - id: detect-private-key
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]

  #
  # Detect hardcoded secrets
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        name: gitleaks

  #
  # YAML
  # - repo: https://github.com/rhysd/actionlint <- "language: g.olang" slower & takes larger CI cache comparing to "system"
  #   rev: v1.7.7
  - repo: local
    hooks:
      # place any overrides in '.actionlint.yaml' https://github.com/rhysd/actionlint/blob/main/docs/config.md
      #  args: ["-config-file=.actionlint.yaml"]
      - id: actionlint-system
        name: github-actionlint
        language: system
        entry: actionlint
        types: ["yaml"]
        files: ^\.github/workflows/
  # - repo: https://github.com/google/yamlfmt <- "language: g.olang" slower & takes larger CI cache comparing to "system"
  #   rev: v0.17.2
  - repo: local
    hooks:
      - id: yamlfmt
        name: yamlfmt
        language: system
        entry: yamlfmt
        types: [yaml]
  # - repo: https://github.com/adrienverge/yamllint <- "language: python" slower & takes larger CI cache comparing to "system"
  #   rev: v1.37.1
  - repo: local
    hooks:
      - id: yamllint
        name: yamllint
        language: system
        entry: yamllint
        types: [file, yaml]
        args: ["--strict"]

  - repo: https://github.com/hadolint/hadolint # language: system
    rev: v2.13.1
    hooks:
      - id: hadolint
        name: hadolint/dockerfile

  #
  # Terraform & Terragrunt
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.100.0
    hooks:
      # - id: tfupdate      # done via 'validate -upgrade' below
      - id: terraform_fmt
        name: terraform-fmt
        args: ["--args=-diff", "--args=-write=true"]
      - id: terraform_tflint
        name: terraform-tflint
        args:
          - --args=--call-module-type=local
          - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl
      - id: terraform_validate
        name: terraform-validate
        files: ^tests/provider/.*.tf$ # the rest are examples only, no need to validate
        args:
          - --tf-init-args=-upgrade
          - --tf-init-args=-backend=false
          - --hook-config=--parallelism-limit=1
      - id: terragrunt_validate_inputs
        name: terragrunt-validate-inputs
        # FIXME: super slow with '-a'
        stages: [manual]

  - repo: https://github.com/terraform-docs/terraform-docs
    rev: "v0.20.0"
    hooks:
      - id: terraform-docs-system
        args:
          - --config=.tfdocs-config.yml

  #
  # IaC in general
  # - repo: https://github.com/bridgecrewio/checkov <- "language: python" slower & takes larger CI cache comparing to "system"
  #   rev: "3.2.470"
  - repo: local
    hooks:
      - id: checkov
        name: iac/checkov
        language: system
        entry: checkov -d . # --enable-secret-scan-all-files
        args: ["-f"] # required and must come last

  #
  # Markdown
  # keep it after 'tf-docs' update, so newly generated/updated files can be verified
  # - repo: https://github.com/DavidAnson/markdownlint-cli2 <- "language: node" slower & takes larger CI cache comparing to "system"
  #   rev: v0.18.1
  - repo: local
    hooks:
      - id: markdownlint
        name: markdownlint
        language: system
        entry: markdownlint-cli2
        types: [markdown]
        exclude: ^(CHANGELOG|.github\/ISSUE_TEMPLATE\/(bug|feature_request)).md$

  - repo: local
    hooks:
      - id: golang-fmt
        name: golang-fmt
        entry: make fmt # gofmt -s -w $(go list -f "{{.Dir}}" ./... | grep -vE /proto-gen)
        types_or: [go, go-mod, go-sum, gotmpl]
        description: "Runs 'gofmt', requires golang"
        language: system
        pass_filenames: false

      - id: golang-gci
        name: golang-gci
        entry: gci write -s standard -s default -s "prefix(github.com/indykite/terraform-provider-indykite)" -s blank -s dot .
        types_or: [go, go-mod, go-sum, gotmpl]
        description: "Requires and runs 'gci', control package import order and make it always deterministic"
        language: system
        pass_filenames: false

      - id: golangci-lint-validate-config
        name: golangci-lint/validate-config
        entry: golangci-lint config verify
        files: '\.golangci\.(y?ml|toml|json)$'
        language: system
        pass_filenames: false

      - id: golangci-lint
        name: golangci-lint
        entry: golangci-lint run
        args: [--new-from-rev, HEAD]
        types_or: [go, go-mod, go-sum, gotmpl]
        description: "Requires and runs 'golangci-lint', fast linters runner for golang; strict mode against new changes only"
        language: system
        pass_filenames: false # golangci-lint detects those automatically

      - id: go-tests
        name: go-tests
        entry: make test
        language: system
        pass_filenames: false
        types_or: [go, go-mod, go-sum, gotmpl]
        always_run: false
        # FIXME:
        stages: [manual]
